x-username: &username Bones
x-password: &password VerySecretPassword
x-host: &host devops_mongo
x-port: &port 27017
x-database: &database Connections
x-params: &params ?=authSource=admin
x-secret: &secret MyLittleSecret

version: "3.9"
services:
  api:
    build: ./api
    image: devops_api
    container_name: devops_api
    environment:
      username: *username
      password: *password
      host: *host
      port: *port
      database: *database
      params: *params
      secret: *secret
    ports:
      - 5000:5000
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - frontend
      - backend
  frontend:
    build: ./frontend
    image: devops_frontend
    container_name: devops_frontend
    ports:
      - 4200:4200
    networks:
      - frontend
  mongo:
    image: mongo:latest
    container_name: devops_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: *username
      MONGO_INITDB_ROOT_PASSWORD: *password
      MONGO_INITDB_DATABASE: *database
    ports:
      - 27017:27017
    volumes:
      - ./data:/data/db
    networks:
      - backend
  db-exporter:
    image: bitnami/mongodb-exporter:0.11
    environment:
      - MONGODB_URI=mongo://db:27017
    restart: always
    ports:
      - 9216:9216
    networks:
      - backend
  prometheus:
    image: prom/prometheus:latest
    container_name: devops_prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
    networks:
     - backend
  grafana:
    build: ./grafana
    image: devops_grafana
    container_name: devops_grafana
    ports:
      - 3000:3000
    networks:
      - backend

volumes:
  prometheus-data:

networks:
  frontend:
    name: frontend_network
  backend:
    name: backend_network
